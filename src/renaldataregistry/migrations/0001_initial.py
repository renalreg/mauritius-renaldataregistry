# Generated by Django 3.2.6 on 2021-09-14 12:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Comorbidity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comorbidity", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="co_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="co_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Disability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disability", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dis_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dis_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HDUnit",
            fields=[
                (
                    "code",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hdu_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hdu_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HealthInstitution",
            fields=[
                (
                    "code",
                    models.CharField(max_length=5, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Unknown"), (1, "Public"), (2, "Private")],
                        default=0,
                        verbose_name="Institution type",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hi_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hi_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LaboratoryParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("parameter", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lp_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lp_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medication", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="m_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="m_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.CharField(max_length=14, primary_key=True, serialize=False),
                ),
                (
                    "id_type",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "N.I.C"), (2, "Passport")],
                        default=1,
                        verbose_name="Unique identifier type",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("surname", models.CharField(max_length=100)),
                ("dob", models.DateField(verbose_name="Date of birth")),
                (
                    "ethnic",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "General population"),
                            (2, "Hindu"),
                            (3, "Islam"),
                            (4, "Chinese (Buddhist)"),
                            (5, "Other"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="Ethnic group",
                    ),
                ),
                (
                    "gender",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, "Male"), (2, "Female"), (3, "Other")],
                        default=1,
                        null=True,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "maritalstatus",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Single"),
                            (2, "Married (Concub...)"),
                            (3, "Widow"),
                            (4, "Divorced (Sep)"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="Marital status",
                    ),
                ),
                (
                    "occupationalstatus",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Employed"),
                            (2, "Housewife"),
                            (3, "Unemployed"),
                            (4, "Retired"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="Occupational status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pat_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pat_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "smokingstatus",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Never smoked"),
                            (2, "Smoker"),
                            (3, "Stopped"),
                        ],
                        default=0,
                        verbose_name="Smoking status",
                    ),
                ),
                (
                    "alcoholuse",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Never"),
                            (2, "Active"),
                            (3, "Stopped"),
                        ],
                        default=0,
                        verbose_name="Alcohol use disorder",
                    ),
                ),
                (
                    "hepatitis_b",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Positive"),
                            (2, "Negative"),
                            (3, "Immune"),
                        ],
                        default=0,
                        verbose_name="Hepatitis B",
                    ),
                ),
                (
                    "hepatitis_c",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Positive"),
                            (2, "Negative"),
                            (3, "Cured"),
                        ],
                        default=0,
                        verbose_name="Hepatitis C",
                    ),
                ),
                (
                    "hiv",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Unknown"), (1, "Positive"), (2, "Negative")],
                        default=0,
                        verbose_name="HIV",
                    ),
                ),
                (
                    "posthd_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Post HD or dry PD weight in kg",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "comorbidity",
                    models.ManyToManyField(
                        blank=True,
                        to="renaldataregistry.Comorbidity",
                        verbose_name="Comorbidities",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pas_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "disability",
                    models.ManyToManyField(
                        blank=True,
                        to="renaldataregistry.Disability",
                        verbose_name="Disabilities",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientAddress",
            fields=[
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="renaldataregistry.patient",
                    ),
                ),
                ("street", models.CharField(blank=True, max_length=200, null=True)),
                ("postcode", models.CharField(blank=True, max_length=5, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PatientAKImeasurement",
            fields=[
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="renaldataregistry.patient",
                    ),
                ),
                (
                    "creatinine",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Latest creatinine",
                    ),
                ),
                (
                    "egfr",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Latest eGFR",
                    ),
                ),
                (
                    "measurement_date",
                    models.DateField(blank=True, null=True, verbose_name="Date done"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "number",
                    models.CharField(max_length=8, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="u_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "healthinstitution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="renaldataregistry.healthinstitution",
                        verbose_name="Health institution",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="u_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RenalDiagnosis",
            fields=[
                (
                    "code",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rd_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rd_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reg_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "health_institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="renaldataregistry.healthinstitution",
                        verbose_name="Health institution",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="renaldataregistry.unit",
                        verbose_name="Unit",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reg_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientOccupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("occupation", models.CharField(blank=True, max_length=100, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="po_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="po_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientMedicationAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "medication_value",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                (
                    "assessment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patientassessment",
                    ),
                ),
                (
                    "medication",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.medication",
                    ),
                ),
            ],
            options={
                "db_table": "renaldataregistry_patientassessment_med",
            },
        ),
        migrations.CreateModel(
            name="PatientMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measurementtype",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Height (cm)"),
                            (2, "Weight (kg)"),
                            (3, "Birth weight (kg)"),
                        ],
                        default=1,
                        verbose_name="Measurement type",
                    ),
                ),
                (
                    "measurementvalue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pm_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pm_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientLPAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assessment_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Value",
                    ),
                ),
                (
                    "assessment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patientassessment",
                    ),
                ),
                (
                    "laboratoryparameter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.laboratoryparameter",
                    ),
                ),
            ],
            options={
                "db_table": "renaldataregistry_patientassessment_lp",
            },
        ),
        migrations.CreateModel(
            name="PatientKRTModality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "modality",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "None"),
                            (2, "NK"),
                            (3, "HD"),
                            (4, "PD"),
                            (5, "TX"),
                        ],
                        default=1,
                        verbose_name="KRT modality",
                    ),
                ),
                ("is_first", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "is_current",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date started"
                    ),
                ),
                (
                    "hd_initialaccess",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "AVF"),
                            (2, "AVG"),
                            (3, "TC"),
                            (4, "NTC"),
                        ],
                        default=0,
                        verbose_name="If HD was the first KRT, what was the initial access?",
                    ),
                ),
                (
                    "hd_sessions",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "hd_minssessions",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "hd_adequacy_urr",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="URR %",
                    ),
                ),
                (
                    "hd_adequacy_kt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Kt/v",
                    ),
                ),
                (
                    "hd_ntcreason",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "AVF/G not ready"),
                            (2, "AVF/G dysfunction"),
                            (3, "On waiting list"),
                            (4, "No veins"),
                            (5, "Patient choice"),
                        ],
                        default=0,
                        verbose_name="If on NTC, why?",
                    ),
                ),
                (
                    "pd_exchangesday",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "pd_fluidlitresday",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Fluid litres/day",
                    ),
                ),
                (
                    "pd_adequacy",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Kt/V urea",
                    ),
                ),
                (
                    "pd_bp",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="BP in mmHg",
                    ),
                ),
                (
                    "hd_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="renaldataregistry.hdunit",
                        verbose_name="HD unit",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contactchannel", models.CharField(max_length=1)),
                (
                    "contactvalue",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pco_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="renaldataregistry.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pco_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="patientassessment",
            name="laboratoryparameter",
            field=models.ManyToManyField(
                blank=True,
                through="renaldataregistry.PatientLPAssessment",
                to="renaldataregistry.LaboratoryParameter",
            ),
        ),
        migrations.AddField(
            model_name="patientassessment",
            name="medication",
            field=models.ManyToManyField(
                blank=True,
                through="renaldataregistry.PatientMedicationAssessment",
                to="renaldataregistry.Medication",
            ),
        ),
        migrations.AddField(
            model_name="patientassessment",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="renaldataregistry.patient",
                verbose_name="Patient",
            ),
        ),
        migrations.AddField(
            model_name="patientassessment",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="pas_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="PatientRenalDiagnosis",
            fields=[
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="renaldataregistry.patient",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="prd_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "renaldiagnosis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="renaldataregistry.renaldiagnosis",
                        verbose_name="Primary renal diagnosis",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="prd_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="patientmeasurement",
            constraint=models.UniqueConstraint(
                fields=("measurementtype", "patient", "created_at"),
                name="unique_patient_measurement",
            ),
        ),
        migrations.AddConstraint(
            model_name="patientcontact",
            constraint=models.UniqueConstraint(
                fields=("contactchannel", "patient", "created_at"),
                name="unique_patient_contact",
            ),
        ),
        migrations.AddField(
            model_name="patientakimeasurement",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="paki_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="patientakimeasurement",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="paki_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="patientaddress",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="pa_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="patientaddress",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="pa_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
